# === ROS 2 Jazzy on Ubuntu 24.04 (Noble) ===
FROM ros:jazzy-ros-base-noble
SHELL ["/bin/bash", "-c"]

ENV DEBIAN_FRONTEND=noninteractive \
    LANG=C.UTF-8 \
    LC_ALL=C.UTF-8 \
    ROS_DISTRO=jazzy \
    PIP_BREAK_SYSTEM_PACKAGES=1

# System/ROS deps (+ meson & ninja from apt)
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential ninja-build pkg-config cmake git curl ca-certificates \
    python3 python3-pip python3-venv python3-colcon-common-extensions \
    python3-yaml python3-ply python3-jinja2 \
    ros-${ROS_DISTRO}-robot-localization \
    ros-${ROS_DISTRO}-rclpy \
    ros-${ROS_DISTRO}-example-interfaces \
    ros-${ROS_DISTRO}-tf-transformations \
    ros-dev-tools \
    libboost-dev libgnutls28-dev openssl libtiff5-dev pybind11-dev \
    libglib2.0-dev libgstreamer-plugins-base1.0-dev \
    libdrm-dev libexpat1-dev libjpeg-dev libpng-dev libcap-dev \
    libavcodec-dev libavformat-dev libswscale-dev libv4l-dev \
    gstreamer1.0-plugins-base \
    meson \
 && rm -rf /var/lib/apt/lists/*

# ---- Build & install libcamera (Python bindings go to /usr/local/...) ----
RUN mkdir -p /packages
WORKDIR /packages
RUN git clone https://github.com/raspberrypi/libcamera.git
WORKDIR /packages/libcamera
RUN PYTHON=/usr/bin/python3 \
    meson setup build --buildtype=release \
      -Dpipelines=rpi/vc4,rpi/pisp \
      -Dipas=rpi/vc4,rpi/pisp \
      -Dv4l2=true \
      -Dgstreamer=enabled \
      -Dtest=false \
      -Dlc-compliance=disabled \
      -Dcam=disabled \
      -Dqcam=disabled \
      -Ddocumentation=disabled \
      -Dpycamera=enabled \
 && ninja -C build \
 && ninja -C build install

# Picamera2 + OpenCV (system-wide)
RUN python3 -m pip install --no-cache-dir \
      "numpy<2.0" \
      "opencv-python-headless==4.10.*" \
      picamera2

# Quick non-fatal check (prints info; does not fail the build)
RUN python3 - <<'PY'
import sys, importlib.util
print("sys.executable:", sys.executable)
for m in ("libcamera","picamera2","cv2"):
    spec = importlib.util.find_spec(m)
    print(m, "=>", spec)
    __import__(m)
print("Imports OK")
PY

# Native libs path (if needed)
ENV LD_LIBRARY_PATH="/usr/local/lib/aarch64-linux-gnu:/usr/local/lib"

# Slim down
WORKDIR /
RUN rm -rf /packages
