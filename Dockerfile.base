FROM ros:galactic-ros-core-focal
SHELL ["/bin/bash", "-c"]
ENV ROS_DISTRO=galactic

# Install system dependencies (including git and jinja2 for libcamera build)
RUN apt-get update && apt-get install -y --no-install-recommends \
    python3.8 python3-pip python3-colcon-common-extensions \
    ros-${ROS_DISTRO}-example-interfaces ros-${ROS_DISTRO}-rclpy \
    libboost-dev libgnutls28-dev openssl libtiff5-dev pybind11-dev \
    qtbase5-dev libqt5core5a libqt5gui5 libqt5widgets5 \
    meson cmake python3-yaml python3-ply \
    libglib2.0-dev libgstreamer-plugins-base1.0-dev \
    git python3-jinja2 && \
    rm -rf /var/lib/apt/lists/*

RUN pip3 install --upgrade pip && pip3 install dynamixel_sdk

# Clone and build libcamera with Python bindings enabled
RUN mkdir -p /packages && cd /packages && \
    git clone https://github.com/raspberrypi/libcamera.git

WORKDIR /packages/libcamera

RUN meson setup build --buildtype=release \
    -Dpipelines=rpi/vc4,rpi/pisp \
    -Dipas=rpi/vc4,rpi/pisp \
    -Dv4l2=true \
    -Dgstreamer=enabled \
    -Dtest=false \
    -Dlc-compliance=disabled \
    -Dcam=disabled \
    -Dqcam=disabled \
    -Ddocumentation=disabled \
    -Dpycamera=enabled && \
    ninja -C build && \
    ninja -C build install

##################################
# Install Python packages including picamera2
##################################
RUN pip3 install opencv-contrib-python picamera2 transforms3d pyserial smbus

