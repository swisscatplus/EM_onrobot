FROM ros:humble-ros-base-jammy
SHELL ["/bin/bash", "-c"]
ENV ROS_DISTRO=humble

# Install system dependencies (including build tools, libraries, etc.)
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    ninja-build \
    pkg-config \
    # Remove meson from apt-get and install a newer version with pip
    cmake \
    python3 python3-pip python3-colcon-common-extensions \
    ros-${ROS_DISTRO}-example-interfaces ros-${ROS_DISTRO}-rclpy \
    python3-yaml python3-ply \
    git python3-jinja2 \
    libboost-dev libgnutls28-dev openssl libtiff5-dev pybind11-dev \
    qtbase5-dev libqt5core5a libqt5gui5 libqt5widgets5 \
    libglib2.0-dev libgstreamer-plugins-base1.0-dev \
    libdrm-dev libexpat1-dev libjpeg-dev libpng-dev libcap-dev\
    libavcodec-dev libavformat-dev libswscale-dev libv4l-dev \
    gstreamer1.0-plugins-base && \
    rm -rf /var/lib/apt/lists/*

# Upgrade pip and install dynamixel_sdk
RUN pip3 install --upgrade pip && pip3 install dynamixel_sdk

# Upgrade Meson using pip to ensure version >= 0.63 (current version will be installed in /usr/local/bin)
RUN pip3 install --upgrade meson

##############################################
# Clone and build libcamera with Python support
##############################################
RUN mkdir /packages
WORKDIR /packages

RUN git clone https://github.com/raspberrypi/libcamera.git

WORKDIR /packages/libcamera

RUN meson setup build --buildtype=release -Dpipelines=rpi/vc4,rpi/pisp -Dipas=rpi/vc4,rpi/pisp -Dv4l2=true -Dgstreamer=enabled -Dtest=false -Dlc-compliance=disabled -Dcam=disabled -Dqcam=disabled -Ddocumentation=disabled -Dpycamera=enabled

RUN ninja -C build

RUN sudo ninja -C build install
###

WORKDIR /packages

### install libkms dependencies
RUN sudo apt update && sudo apt install -y --no-install-recommends \
     libfmt-dev libdrm-dev libfmt-dev \
     libcap-dev

# install kmsxx
RUN git clone https://github.com/tomba/kmsxx.git

WORKDIR /packages/kmsxx

RUN git submodule update --init

RUN meson build -Dpykms=enabled

RUN sudo ninja -C build install


##############################################
# Install Python packages including picamera2
##############################################
RUN pip3 install picamera2 opencv-python

