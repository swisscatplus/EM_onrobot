# === ROS 2 Jazzy on Ubuntu 24.04 (Noble) ===
FROM ros:jazzy-ros-base-noble

SHELL ["/bin/bash", "-c"]
ENV DEBIAN_FRONTEND=noninteractive \
    LANG=C.UTF-8 \
    LC_ALL=C.UTF-8 \
    ROS_DISTRO=jazzy

##############################
# 1) System dependencies & ROS packages
##############################
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential ninja-build pkg-config cmake git curl ca-certificates \
    python3 python3-pip python3-venv python3-colcon-common-extensions \
    python3-yaml python3-ply python3-jinja2 \
    ros-${ROS_DISTRO}-robot-localization \
    ros-${ROS_DISTRO}-rclpy \
    ros-${ROS_DISTRO}-example-interfaces \
    ros-${ROS_DISTRO}-tf-transformations \
    ros-dev-tools \
    libboost-dev libgnutls28-dev openssl libtiff5-dev pybind11-dev \
    libglib2.0-dev libgstreamer-plugins-base1.0-dev \
    libdrm-dev libexpat1-dev libjpeg-dev libpng-dev libcap-dev \
    libavcodec-dev libavformat-dev libswscale-dev libv4l-dev \
    gstreamer1.0-plugins-base \
    ros-${ROS_DISTRO}-rmw-cyclonedds-cpp \
 && rm -rf /var/lib/apt/lists/*

##############################
# 2) Python deps (allow pip in system env on Noble: PEP 668)
##############################
ENV PIP_BREAK_SYSTEM_PACKAGES=1
RUN pip3 install --no-cache-dir --upgrade pip \
 && pip3 install --no-cache-dir dynamixel_sdk meson

##############################
# 3) Clone & build libcamera (with Python)
##############################
RUN mkdir -p /packages
WORKDIR /packages

RUN git clone https://github.com/raspberrypi/libcamera.git
WORKDIR /packages/libcamera
RUN meson setup build --buildtype=release \
    -Dpipelines=rpi/vc4,rpi/pisp \
    -Dipas=rpi/vc4,rpi/pisp \
    -Dv4l2=true \
    -Dgstreamer=enabled \
    -Dtest=false \
    -Dlc-compliance=disabled \
    -Dcam=disabled \
    -Dqcam=disabled \
    -Ddocumentation=disabled \
    -Dpycamera=enabled
RUN ninja -C build && ninja -C build install

##############################
# 4) kmsxx with Python bindings
##############################
WORKDIR /packages
RUN apt-get update && apt-get install -y --no-install-recommends \
    libfmt-dev libdrm-dev libcap-dev \
 && rm -rf /var/lib/apt/lists/*
RUN git clone https://github.com/tomba/kmsxx.git
WORKDIR /packages/kmsxx
RUN git submodule update --init
RUN meson setup build -Dpykms=enabled \
 && ninja -C build \
 && ninja -C build install

##############################
# 5) Extra Python packages for camera
##############################
RUN pip3 install --no-cache-dir picamera2 opencv-python

##############################
# 6) Runtime env
##############################

# If native libs landed in /usr/local, ensure theyâ€™re found
ENV LD_LIBRARY_PATH="/usr/local/lib/aarch64-linux-gnu:${LD_LIBRARY_PATH:-}"

# (Optional) rosdep init if you use rosdep inside the container
# RUN rosdep init || true
